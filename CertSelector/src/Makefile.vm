# Copyright 2024 Comcast Cable Communications Management, LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#

# build with
CC           = gcc
#
CFLAGS       = -I ../include
CFLAGS       += -Wall -Wno-unused-function -Os -std=gnu99
CFLAGS       += -Wfatal-errors
CFLAGS       += -Werror

MAKEFILE	 = Makefile.vm

.SILENT:
.PHONY:  clean ut ct tst1setup

all: utcertsel utcertloc

SRCS += rdkcertselector.c rdkcertselector.h rdkcertlocator.c rdkcertlocator.h

OBJS = $(filter %.o,$(SRCS:.c=.o))

rdkconfig.h :
	@echo "create mock rdkconfig.h"
	@echo "#define RDKCONFIG_OK 0"   > rdkconfig.h
	@echo "#define RDKCONFIG_FAIL 1" >> rdkconfig.h
	@echo "int rdkconfig_getStr( char **sbuff, size_t *sbuffsz, const char *refname );" >> rdkconfig.h
	@echo "int rdkconfig_freeStr( char **sbuff, size_t sbuffsz );" >> rdkconfig.h

utcertsel : rdkcertselector.c ../include/rdkcertselector.h rdkconfig.h $(MAKEFILE)
	@echo "building utcertsel"
	$(CC) $(CFLAGS) -DUNIT_TESTS rdkcertselector.c -o $@

utcertloc : rdkcertlocator.c ../include/rdkcertlocator.h rdkconfig.h $(MAKEFILE)
	@echo "building utcertloc"
	$(CC) $(CFLAGS) -DUNIT_TESTS rdkcertlocator.c -o $@

utsel : utcertsel tst1setup
	./utcertsel

utloc : utcertloc tst1setup
	./utcertloc

ut : utcertsel utcertloc tst1setup
	./utcertloc
	./utcertsel

libs : libRdkCertSelector.a libRdkCertLocator.a

libRdkCertSelector.a : rdkcertselector.c rdkconfig.h
	@echo "building $@"
	$(CC) -DDEV_TESTS -c $(CFLAGS) rdkcertselector.c -o rdkcertselector.o
	ar -rcs $@ rdkcertselector.o

libRdkCertLocator.a : rdkcertlocator.c rdkconfig.h
	@echo "building $@"
	$(CC) -DDEV_TESTS -c $(CFLAGS) rdkcertlocator.c -o rdkcertlocator.o
	ar -rcs $@ rdkcertlocator.o

# component testing (testing component with mocked script)
./ctmain : ctmain.c libRdkCertSelector.a libRdkCertLocator.a
	@echo "building $@"
	$(CC) $(CFLAGS) ctmain.c libRdkCertSelector.a libRdkCertLocator.a -o $@

ct : ./ctmain tst1setup
	@echo
	@echo "COMPONENT TEST - rdkcertselector - BEGIN"
	./ctmain
	@echo "COMPONENT TEST - rdkcertselector - SUCCESS"


tsts : ut ct

covut: clean
	rm -rf ./coverity ./HTML
	cov-configure --gcc
	cov-build --dir coverity make -f Makefile.vm ut
	cov-analyze --dir coverity --all
	cov-format-errors --dir coverity --html-output HTML
	grep -A 6 -e "<tr" HTML/index.html | sed -e 's/<[^>]*>//g' > coverrors.txt
	tar cvjf covut.bz2 HTML/

clean :
	rm -f *.o *.so *.a *.map utcertsel utcertloc ctmain rdkconfig.h
	rm -fr ./ut/

tst1setup:
	@mkdir -p ./ut/etc/ssl/certsel
	@echo "TSTGRP1,FRST,TMP,file://./ut/etc/ssl/certsel/tst1def.tmp,./ut/etc/ssl/certsel/pcdef" > ./ut/etc/ssl/certsel/certsel.cfg
	@touch ./ut/etc/ssl/certsel/tst1def.tmp ut/etc/ssl/certsel/pcdef
	@echo "hrotengine=e4tstdef" > ./ut/etc/ssl/certsel/hrot.properties
	@echo "TSTGRP1,FRST,TMP,file://./ut/tst1first.tmp,pc1" > ./ut/tst1certsel.cfg
	@echo "TSTGRP1,SCND,TMP,file://./ut/tst1second.tmp,pc2" >> ./ut/tst1certsel.cfg
	@echo "TSTGRP10,NOPC,TMP,file://./ut/tst1first.tmp,pc10" >> ./ut/tst1certsel.cfg
	@echo "TSTGRP1|TSTGRP3,THRD,TMP,file://./ut/tst1third.tmp,pc3" >> ./ut/tst1certsel.cfg
	@echo "TSTGRP2,ALPHA,TMP,file://./ut/tst1alpha.tmp,pcalpha" >> ./ut/tst1certsel.cfg
	@echo "UNKNWN,UNKNO,TMP,file://./ut/tst1unknown.tmp,pcunk" >> ./ut/tst1certsel.cfg
	@echo "A1|A2|A3|A4|A5|A6|A7|A8|A9|A10,ALPHA,TMP,file://./ut/tst1alpha.tmp,pcalpha" >> ./ut/tst1certsel.cfg
	@touch ./ut/tst1first.tmp
	@touch ./ut/tst1second.tmp
	@touch ./ut/tst1third.tmp
	@touch ./ut/tst1alpha.tmp
	@echo "hrotengine=e4tst1" > ./ut/tst1hrot.properties
	@echo "\nhrotengine=e4tst1" > ./ut/tst2hrot.properties
	@echo "hrotprovider=e4tst1" > ./ut/bad3hrot.properties
	@echo -n "GRP1,FRST,TMP,t1.tmp,pc1" > ./ut/tst1toolong.cfg
	@echo -n "0123456789112345678921234567893123456789412345678951234567896123456789712345678981234567899123456789" >> ./ut/tst1toolong.cfg
	@echo -n "0123456789112345678921234567893123456789412345678951234567896123456789712345678981234567899123456789" >> ./ut/tst1toolong.cfg
	@echo -n "0123456789112345678921234567893123456789412345678951234567896123456789712345678981234567899123456789" >> ./ut/tst1toolong.cfg
	@echo -n "0123456789112345678921234567893123456789412345678951234567896123456789712345678981234567899123456789" >> ./ut/tst1toolong.cfg
	@echo -n "0123456789112345678921234567893123456789412345678951234567896123456789712345678981234567899123456789" >> ./ut/tst1toolong.cfg
	@echo -n "0123456789112345678921234567893123456789412345678951234567896123456789712345678981234567899123456789" >> ./ut/tst1toolong.cfg
	@echo -n "0123456789112345678921234567893123456789412345678951234567896123456789712345678981234567899123456789" >> ./ut/tst1toolong.cfg
	@echo -n "0123456789112345678921234567893123456789412345678951234567896123456789712345678981234567899123456789" >> ./ut/tst1toolong.cfg
	@echo -n "0123456789112345678921234567893123456789412345678951234567896123456789712345678981234567899123456789" >> ./ut/tst1toolong.cfg
	@echo -n "0123456789112345678921234567893123456789412345678951234567896123456789712345678981234567899123456789" >> ./ut/tst1toolong.cfg
	@cp ./ut/tst1toolong.cfg ./ut/long4hrot.properties
	@echo "TSTGRP1" > ./ut/tst1miss2.cfg
	@echo "TSTGRP1,FRST," > ./ut/tst1miss3.cfg
	@echo "TSTGRP1,FRST,TMP" > ./ut/tst1miss4.cfg
	@echo "TSTGRP1,FRST,TMP,file://./ut/tst1first.tmp," > ./ut/tst1miss5.cfg

